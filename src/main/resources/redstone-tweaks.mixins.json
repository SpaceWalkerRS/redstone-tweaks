{
	"required": true,
	"package": "redstone.tweaks.mixin",
	"compatibilityLevel": "JAVA_16",
	"mixins": [	
		"common.BlockBehaviourMixin",

		"common.block_dropping.PistonBaseBlockMixin",
		"common.block_dropping.PistonStructureResolverMixin",

		"common.connect_to_wire.RedStoneWireBlockMixin",

		"common.crush.AnvilBlockMixin",

		"common.delay.BambooStalkBlockMixin",
		"common.delay.BaseCoralPlantTypeBlockMixin",
		"common.delay.BasePressurePlateBlockMixin",
		"common.delay.BubbleColumnBlockMixin",
		"common.delay.CactusBlockMixin",
		"common.delay.ChorusPlantBlockMixin",
		"common.delay.CommandBlockMixin",
		"common.delay.ComparatorBlockMixin",
		"common.delay.ComposterBlockMixin",
		"common.delay.CoralBlockMixin",
		"common.delay.DetectorRailBlockMixin",
		"common.delay.DiodeBlockMixin",
		"common.delay.DirtPathBlockMixin",
		"common.delay.DispenserBlockMixin",
		"common.delay.DragonEggBlockMixin",
		"common.delay.DropperBlockMixin",
		"common.delay.FallingBlockMixin",
		"common.delay.FarmBlockMixin",
		"common.delay.FireBlockMixin",
		"common.delay.FrostedIceBlockMixin",
		"common.delay.HopperBlockEntityMixin",
		"common.delay.HopperBlockMixin",
		"common.delay.LavaFluidMixin",
		"common.delay.LeavesBlockMixin",
		"common.delay.LevelMixin",
		"common.delay.LecternBlockEntityMixin",
		"common.delay.LecternBlockMixin",
		"common.delay.LeverBlockMixin",
		"common.delay.LiquidBlockMixin",
		"common.delay.MagmaBlockMixin",
		"common.delay.NoteBlockMixin",
		"common.delay.ObserverBlockMixin",
		"common.delay.PistonBaseBlockMixin",
		"common.delay.PoweredRailBlockMixin",
		"common.delay.PressurePlateBlockMixin",
		"common.delay.RailBlockMixin",
		"common.delay.RedstoneLampBlockMixin",
		"common.delay.RedStoneOreBlockMixin",
		"common.delay.RepeaterBlockMixin",
		"common.delay.ServerLevelMixin",
		"common.delay.WaterFluidMixin",
		"common.delay.WeightedPressurePlateBlockMixin",

		"common.double_retraction.PistonBaseBlockMixin",

		"common.ignore_updates_while_moving.MovingPistonBlockMixin",
		"common.ignore_updates_while_moving.PistonBaseBlockMixin",

		"common.movable.BlockEntityMixin",
		"common.movable.LevelChunkMixin",
		"common.movable.LevelMixin",
		"common.movable.MovingPistonBlockMixin",
		"common.movable.PistonBaseBlockMixin",
		"common.movable.PistonHeadBlockMixin",
		"common.movable.PistonMovingBlockEntityMixin",
		"common.movable.PistonStructureResolverMixin",

		"common.move_self.PistonBaseBlockMixin",
		"common.move_self.PistonMovingBlockEntityMixin",

		"common.neighbor_updates.PistonBaseBlockMixin",

		"common.nou.CactusBlockMixin",

		"common.observer.ObserverBlockMixin",

		"common.quasi_connectivity.BaseRailBlockMixin",
		"common.quasi_connectivity.CommandBlockMixin",
		"common.quasi_connectivity.DispenserBlockMixin",
		"common.quasi_connectivity.DropperBlockMixin",
		"common.quasi_connectivity.HopperBlockMixin",
		"common.quasi_connectivity.NoteBlockMixin",
		"common.quasi_connectivity.PistonBaseBlockMixin",
		"common.quasi_connectivity.PoweredRailBlockMixin",
		"common.quasi_connectivity.RedstoneLampBlockMixin",

		"common.signal.ComparatorBlockMixin",
		"common.signal.DaylightDetectorBlockMixin",
		"common.signal.DetectorRailBlockMixin",
		"common.signal.DiodeBlockMixin",
		"common.signal.LevelMixin",
		"common.signal.LecternBlockMixin",
		"common.signal.LeverBlockMixin",
		"common.signal.ObserverBlockMixin",
		"common.signal.PoweredBlockMixin",
		"common.signal.PoweredRailBlockMixin",
		"common.signal.PressurePlateBlockMixin",
		"common.signal.RedStoneOreBlockMixin",
		"common.signal.RepeaterBlockMixin",
		"common.signal.SandBlockMixin",
		"common.signal.WeightedPressurePlateBlockMixin",

		"common.speed.PistonMovingBlockEntityMixin",

		"common.sticky.ChestBlockMixin",
		"common.sticky.FallingBlockMixin",
		"common.sticky.HoneyBlockMixin",
		"common.sticky.MovingPistonBlockMixin",
		"common.sticky.PistonBaseBlockMixin",
		"common.sticky.PistonHeadBlockMixin",
		"common.sticky.PistonStructureResolverMixin",
		"common.sticky.SlimeBlockMixin",

		"common.update_self.PistonBaseBlockMixin"
	],
	"client": [
		"client.movable.PistonHeadRendererMixin",

		"client.move_self.PistonHeadRendererMixin"
	],
	"server": [
	],
	"injectors": {
		"defaultRequire": 1
	}
}
